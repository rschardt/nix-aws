{ ... }:
{
  services.fail2ban.enable = true;
  services.openssh = {

    enable = true;
    ports = [ 22 ]; # Obfuscate this port
    openFirewall = true;

    hostKeys =
        [
          {
            type = "ed25519";
            path = "/etc/ssh/ssh_host_ed25519_key";
            rounds = 100;
            comment = "generated by nix";
          }
        ];

    settings = {

      LogLevel = "INFO";

      PermitRootLogin = "prohibit-password";
      PasswordAuthentication = false;

      KexAlgorithms = [ "curve25519-sha256@libssh.org" ];
      Ciphers = [
        "chacha20-poly1305@openssh.com"
        "aes256-gcm@openssh.com"
        "aes128-gcm@openssh.com"
        "aes256-ctr"
        "aes192-ctr"
        "aes128-ctr"
      ];
      Macs = [
        "hmac-sha2-512-etm@openssh.com"
        "hmac-sha2-256-etm@openssh.com"
        "umac-128-etm@openssh.com"
        "hmac-sha2-512"
        "hmac-sha2-256"
        "umac-128@openssh.com"
      ];

      # only use this if you have a trustworthy DNS in LAN
      UseDns = false;
    };

    extraConfig = ''
    PubkeyAuthentication yes
    PasswordAuthentication no
    ChallengeResponseAuthentication no
    '';
  };

  users.users = {
    root = {
      openssh.authorizedKeys.keys = [
        "ssh-rsa ???" # Provide your own key
      ];
    };
  };
}
